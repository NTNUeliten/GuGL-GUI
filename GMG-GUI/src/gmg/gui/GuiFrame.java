/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gmg.gui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Olav Rune
 */
public class GuiFrame extends javax.swing.JFrame {

    int hueVal;
    int satVal;
    int valVal;
    boolean videoStreamActive;
    boolean manualModeActive;
    boolean shootToKill;
    boolean fire;
    private UDPsend udpSend;
    private UdpRecive UdpRecive;

    int upValueFromGui;
    int downValueFromGui;
    int leftValueFromGui;
    int rightValueFromGui;

    /**
     * Creates new form GuiFrame
     */
    public GuiFrame() {
        initComponents();
    }

    public void addPanel(Panel p) {

        cameraPanel.add(p);
    }

    public void addUDPSendSocket(UDPsend udp) {

        this.udpSend = udp;
    }

    public void addUDPReciveSocket(UdpRecive udpRecive) {

        this.UdpRecive = udpRecive;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        valueMaxSlider = new javax.swing.JSlider();
        hueMinSlider = new javax.swing.JSlider();
        hueMaxSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        hueMaxValue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        hueMinValue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        saturationMaxValue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        saturationMinSlider = new javax.swing.JSlider();
        saturationMinValue = new javax.swing.JTextField();
        SaturationMaxSlider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        valueMaxValue = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        valueMinSlider = new javax.swing.JSlider();
        valueMinValue = new javax.swing.JTextField();
        importValueBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        addValuesBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cameraPanel = new Panel();
        sendValuesButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        VideoOnOffToggle = new javax.swing.JToggleButton();
        manualModeToggle = new javax.swing.JToggleButton();
        FireToggle = new javax.swing.JToggleButton();
        fireButton = new javax.swing.JButton();
        servoYvalue = new javax.swing.JSlider();
        servoXvalue = new javax.swing.JSlider();
        fireButton1 = new javax.swing.JButton();
        fireButton2 = new javax.swing.JButton();
        MiddleWiundowVal = new javax.swing.JTextField();
        MiddleWindowSlider = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        ShootingWindowSlider = new javax.swing.JSlider();
        ShootingWindowVal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        LowFactorVal = new javax.swing.JTextField();
        HighFactorSlider = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        HighFactorVal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        LowFactorSlider = new javax.swing.JSlider();
        timeLowTextTing = new javax.swing.JTextField();
        TimeHighSlider = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        TimeHigh = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        timeLowSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        valueMaxSlider.setMaximum(255);
        valueMaxSlider.setValue(255);
        valueMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                valueMaxSliderStateChanged(evt);
            }
        });

        hueMinSlider.setMaximum(200);
        hueMinSlider.setToolTipText("");
        hueMinSlider.setValue(29);
        hueMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hueMinSliderStateChanged(evt);
            }
        });

        hueMaxSlider.setMaximum(255);
        hueMaxSlider.setValue(45);
        hueMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hueMaxSliderStateChanged(evt);
            }
        });

        jLabel3.setText("Hue min");

        hueMaxValue.setText("1000");
        hueMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hueMaxValueActionPerformed(evt);
            }
        });

        jLabel6.setText("Hue max");

        hueMinValue.setText("1000");
        hueMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hueMinValueActionPerformed(evt);
            }
        });

        jLabel7.setText("Saturation min");

        saturationMaxValue.setText("1000");
        saturationMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturationMaxValueActionPerformed(evt);
            }
        });

        jLabel8.setText("Saturation max");

        saturationMinSlider.setMaximum(255);
        saturationMinSlider.setToolTipText("");
        saturationMinSlider.setValue(112);
        saturationMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                saturationMinSliderStateChanged(evt);
            }
        });

        saturationMinValue.setText("1000");
        saturationMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturationMinValueActionPerformed(evt);
            }
        });

        SaturationMaxSlider.setMaximum(255);
        SaturationMaxSlider.setToolTipText("");
        SaturationMaxSlider.setValue(255);
        SaturationMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SaturationMaxSliderStateChanged(evt);
            }
        });

        jLabel9.setText("Value min");

        valueMaxValue.setText("1000");
        valueMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueMaxValueActionPerformed(evt);
            }
        });

        jLabel10.setText("Value max");

        valueMinSlider.setMaximum(255);
        valueMinSlider.setToolTipText("");
        valueMinSlider.setValue(84);
        valueMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                valueMinSliderStateChanged(evt);
            }
        });

        valueMinValue.setText("1000");
        valueMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueMinValueActionPerformed(evt);
            }
        });

        importValueBtn.setText("Get Value");
        importValueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importValueBtnActionPerformed(evt);
            }
        });

        jButton1.setText("AutoTune");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addValuesBtn.setText("Add values");
        addValuesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addValuesBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Settings");

        javax.swing.GroupLayout cameraPanelLayout = new javax.swing.GroupLayout(cameraPanel);
        cameraPanel.setLayout(cameraPanelLayout);
        cameraPanelLayout.setHorizontalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );
        cameraPanelLayout.setVerticalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        sendValuesButton.setText("Send values");
        sendValuesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendValuesButtonMouseClicked(evt);
            }
        });
        sendValuesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendValuesButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("update from UDP");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        VideoOnOffToggle.setText("Video on");
        VideoOnOffToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VideoOnOffToggleStateChanged(evt);
            }
        });
        VideoOnOffToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VideoOnOffToggleMouseClicked(evt);
            }
        });
        VideoOnOffToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VideoOnOffToggleActionPerformed(evt);
            }
        });

        manualModeToggle.setText("Manual Mode");
        manualModeToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                manualModeToggleStateChanged(evt);
            }
        });
        manualModeToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manualModeToggleMouseClicked(evt);
            }
        });
        manualModeToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualModeToggleActionPerformed(evt);
            }
        });

        FireToggle.setText("AutoFire");
        FireToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                FireToggleStateChanged(evt);
            }
        });
        FireToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FireToggleMouseClicked(evt);
            }
        });
        FireToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FireToggleActionPerformed(evt);
            }
        });

        fireButton.setText("Fire");
        fireButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireButtonMouseClicked(evt);
            }
        });
        fireButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireButtonActionPerformed(evt);
            }
        });

        servoYvalue.setMaximum(180);
        servoYvalue.setOrientation(javax.swing.JSlider.VERTICAL);
        servoYvalue.setToolTipText("");
        servoYvalue.setValue(84);
        servoYvalue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                servoYvalueStateChanged(evt);
            }
        });

        servoXvalue.setMaximum(180);
        servoXvalue.setToolTipText("");
        servoXvalue.setValue(84);
        servoXvalue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                servoXvalueStateChanged(evt);
            }
        });

        fireButton1.setText("No kill");
        fireButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireButton1MouseClicked(evt);
            }
        });
        fireButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireButton1ActionPerformed(evt);
            }
        });

        fireButton2.setText("Kill");
        fireButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fireButton2MouseClicked(evt);
            }
        });
        fireButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fireButton2ActionPerformed(evt);
            }
        });

        MiddleWiundowVal.setText("1000");
        MiddleWiundowVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MiddleWiundowValActionPerformed(evt);
            }
        });

        MiddleWindowSlider.setMaximum(30);
        MiddleWindowSlider.setMinorTickSpacing(20);
        MiddleWindowSlider.setToolTipText("");
        MiddleWindowSlider.setValue(11);
        MiddleWindowSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MiddleWindowSliderStateChanged(evt);
            }
        });

        jLabel11.setText("Shooting Window");

        ShootingWindowSlider.setMaximum(50);
        ShootingWindowSlider.setToolTipText("");
        ShootingWindowSlider.setValue(24);
        ShootingWindowSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ShootingWindowSliderStateChanged(evt);
            }
        });

        ShootingWindowVal.setText("1000");
        ShootingWindowVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShootingWindowValActionPerformed(evt);
            }
        });

        jLabel12.setText("Middle Window");

        LowFactorVal.setText("1000");
        LowFactorVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LowFactorValActionPerformed(evt);
            }
        });

        HighFactorSlider.setToolTipText("");
        HighFactorSlider.setValue(44);
        HighFactorSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                HighFactorSliderStateChanged(evt);
            }
        });

        jLabel13.setText("LowFactor");

        HighFactorVal.setText("1000");
        HighFactorVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HighFactorValActionPerformed(evt);
            }
        });

        jLabel14.setText("HighFactor");

        LowFactorSlider.setToolTipText("");
        LowFactorSlider.setValue(27);
        LowFactorSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                LowFactorSliderStateChanged(evt);
            }
        });

        timeLowTextTing.setText("1000");
        timeLowTextTing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeLowTextTingActionPerformed(evt);
            }
        });

        TimeHighSlider.setMaximum(150);
        TimeHighSlider.setToolTipText("");
        TimeHighSlider.setValue(79);
        TimeHighSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TimeHighSliderStateChanged(evt);
            }
        });

        jLabel15.setText("TimeToPassLow");

        TimeHigh.setText("1000");
        TimeHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeHighActionPerformed(evt);
            }
        });

        jLabel16.setText("TimeToPassHigh");

        timeLowSlider.setToolTipText("");
        timeLowSlider.setValue(34);
        timeLowSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeLowSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cameraPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 214, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(HighFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HighFactorVal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(LowFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LowFactorVal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MiddleWindowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MiddleWiundowVal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(ShootingWindowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ShootingWindowVal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TimeHighSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TimeHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(timeLowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(timeLowTextTing, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel15))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(servoYvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SaturationMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(saturationMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(saturationMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(saturationMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(hueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(hueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(valueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(valueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(valueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(valueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(importValueBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                .addComponent(VideoOnOffToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(manualModeToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addValuesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sendValuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(FireToggle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                        .addComponent(fireButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fireButton, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                        .addComponent(fireButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGap(41, 41, 41)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(servoXvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(284, 284, 284))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cameraPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ShootingWindowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12))
                                    .addComponent(ShootingWindowVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(MiddleWindowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LowFactorVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(LowFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel14)
                                                .addGap(5, 5, 5)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(HighFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(HighFactorVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addComponent(MiddleWiundowVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeLowTextTing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(timeLowSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16)
                                        .addGap(5, 5, 5)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TimeHighSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TimeHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(servoYvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(hueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addGap(5, 5, 5)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(hueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saturationMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(saturationMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addGap(5, 5, 5)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SaturationMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(saturationMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(35, 35, 35)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(valueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(5, 5, 5)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(valueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(valueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(valueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(400, 400, 400)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(importValueBtn)
                                    .addComponent(addValuesBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(sendValuesButton))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(VideoOnOffToggle)
                                    .addComponent(manualModeToggle))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(UpdateButton)
                                    .addComponent(fireButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fireButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fireButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FireToggle)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(servoXvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Engravers MT", 1, 36)); // NOI18N
        jLabel1.setText("GUided Grenade launcher control interface");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1359, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fireButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fireButton2ActionPerformed

    private void fireButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireButton2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fireButton2MouseClicked

    private void fireButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fireButton1ActionPerformed

    private void fireButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fireButton1MouseClicked

    private void servoXvalueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_servoXvalueStateChanged
        // TODO add your handling code here:
        sendValues();
    }//GEN-LAST:event_servoXvalueStateChanged

    private void servoYvalueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_servoYvalueStateChanged
        // TODO add your handling code here:

        udpSend.sendParam(getCurrentvalues());
    }//GEN-LAST:event_servoYvalueStateChanged

    private void fireButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fireButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fireButtonActionPerformed

    private void fireButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fireButtonMouseClicked
        // TODO add your handling code here:

        fire = true;
        sendValues();
    }//GEN-LAST:event_fireButtonMouseClicked

    private void FireToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FireToggleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FireToggleActionPerformed

    private void FireToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FireToggleMouseClicked
        // TODO add your handling code here:

        if (FireToggle.isSelected()) {
            shootToKill = true;
            fire = false;
            FireToggle.setText("Kill");

        } else {
            shootToKill = false;
            FireToggle.setText("No Kill");
        }
        sendValues();
    }//GEN-LAST:event_FireToggleMouseClicked

    private void FireToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_FireToggleStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_FireToggleStateChanged

    private void manualModeToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualModeToggleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manualModeToggleActionPerformed

    private void manualModeToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manualModeToggleMouseClicked
        // TODO add your handling code here:

        if (manualModeToggle.isSelected()) {
            manualModeActive = true;
            resetValues();      // Resetting values in case some shitface have
            // pressed manual buttons with automatic mode activated
        } else {
            manualModeActive = false;
        }

        sendValues();
    }//GEN-LAST:event_manualModeToggleMouseClicked

    private void manualModeToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_manualModeToggleStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_manualModeToggleStateChanged

    private void VideoOnOffToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VideoOnOffToggleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VideoOnOffToggleActionPerformed

    private void VideoOnOffToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VideoOnOffToggleMouseClicked
        // TODO add your handling code here:

        if (VideoOnOffToggle.isSelected()) {
            videoStreamActive = true;
        } else {
            videoStreamActive = false;
        }

        sendValues();
    }//GEN-LAST:event_VideoOnOffToggleMouseClicked

    private void VideoOnOffToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VideoOnOffToggleStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_VideoOnOffToggleStateChanged

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        try {
            // TODO add your handling code here:

            byte[] b = UdpRecive.receiveParam();

        } catch (IOException ex) {
            Logger.getLogger(GuiFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void sendValuesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendValuesButtonActionPerformed
        // TODO add your handling code here:

        udpSend.sendParam(getCurrentvalues());

        /*
        int i = 255;
        byte b = (byte) i;
        int s = b & (0xff);

        System.out.println("" + i + " " + b +" "  +s);

        byte signedByte = b;
        int unsignedByte = signedByte & (0xff);

        System.out.println("Signed: " + signedByte + " Unsigned: " + unsignedByte);
         */
    }//GEN-LAST:event_sendValuesButtonActionPerformed

    private void addValuesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addValuesBtnActionPerformed
        // TODO add your handling code here:

        // Setting a new maxvalue
        if (hueVal > hueMaxSlider.getValue()) {
            hueMaxSlider.setValue(hueVal + setValueIncrement);
        }
        if (satVal > SaturationMaxSlider.getValue()) {
            SaturationMaxSlider.setValue(satVal + setValueIncrement);
        }
        if (valVal > valueMaxSlider.getValue()) {
            valueMaxSlider.setValue((valVal + setValueIncrement));
        }

        //Setting a new min value
        if (hueVal < hueMinSlider.getValue()) {
            hueMinSlider.setValue(hueVal - setValueIncrement);
        }
        if (satVal < saturationMinSlider.getValue()) {
            saturationMinSlider.setValue(satVal - setValueIncrement);
        }
        if (valVal < valueMinSlider.getValue()) {
            valueMinSlider.setValue((valVal - setValueIncrement));
        }
        // messageField.setText("New values added");
    }//GEN-LAST:event_addValuesBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        hueMinSlider.setValue(hueVal - 6);
        hueMaxSlider.setValue(hueVal + 6);

        saturationMinSlider.setValue(satVal - 50);
        SaturationMaxSlider.setValue(satVal + 50);

        valueMinSlider.setValue(valVal - 30);
        valueMaxSlider.setValue(valVal + 30);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void importValueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importValueBtnActionPerformed
        // TODO add your handling code here:

        String hue = String.valueOf(hueVal);
        String sat = String.valueOf(satVal);
        String val = String.valueOf(valVal);

    }//GEN-LAST:event_importValueBtnActionPerformed

    private void valueMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueMinValueActionPerformed

    private void valueMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_valueMinSliderStateChanged
        // TODO add your handling code here:
        valueMinValue.setText(String.valueOf(valueMinSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_valueMinSliderStateChanged

    private void valueMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueMaxValueActionPerformed

    private void SaturationMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SaturationMaxSliderStateChanged
        // TODO add your handling code here:
        saturationMaxValue.setText(String.valueOf(SaturationMaxSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_SaturationMaxSliderStateChanged

    private void saturationMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturationMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saturationMinValueActionPerformed

    private void saturationMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_saturationMinSliderStateChanged
        // TODO add your handling code here:
        saturationMinValue.setText(String.valueOf(saturationMinSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_saturationMinSliderStateChanged

    private void saturationMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturationMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saturationMaxValueActionPerformed

    private void hueMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hueMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hueMinValueActionPerformed

    private void hueMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hueMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hueMaxValueActionPerformed

    private void hueMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hueMaxSliderStateChanged
        // TODO add your handling code here:
        hueMaxValue.setText(String.valueOf(hueMaxSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_hueMaxSliderStateChanged

    private void hueMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hueMinSliderStateChanged
        // TODO add your handling code here:
        hueMinValue.setText(String.valueOf(hueMinSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_hueMinSliderStateChanged

    private void valueMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_valueMaxSliderStateChanged
        // TODO add your handling code here:
        valueMaxValue.setText(String.valueOf(valueMaxSlider.getValue()));
        sendValues();
    }//GEN-LAST:event_valueMaxSliderStateChanged

    private void MiddleWiundowValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MiddleWiundowValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MiddleWiundowValActionPerformed

    private void ShootingWindowSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ShootingWindowSliderStateChanged
        // TODO add your handling code here:

        float shootingWindowValue = ShootingWindowSlider.getValue() / 10f;
        ShootingWindowVal.setText(String.valueOf(shootingWindowValue));
        sendValues();

    }//GEN-LAST:event_ShootingWindowSliderStateChanged

    private void ShootingWindowValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShootingWindowValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShootingWindowValActionPerformed

    private void MiddleWindowSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MiddleWindowSliderStateChanged
        // TODO add your handling code here:

        float MiddleWindowValue = MiddleWindowSlider.getValue();
        MiddleWiundowVal.setText(String.valueOf(MiddleWindowValue));
        sendValues();
    }//GEN-LAST:event_MiddleWindowSliderStateChanged

    private void LowFactorValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LowFactorValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LowFactorValActionPerformed

    private void HighFactorSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_HighFactorSliderStateChanged
        // TODO add your handling code here:
        float highValue = HighFactorSlider.getValue() / 100f;
        HighFactorVal.setText(String.valueOf(highValue));
        sendValues();
    }//GEN-LAST:event_HighFactorSliderStateChanged

    private void HighFactorValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HighFactorValActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HighFactorValActionPerformed

    private void LowFactorSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_LowFactorSliderStateChanged
        // TODO add your handling code here:
        float lowFactor = LowFactorSlider.getValue() / 100f;
        LowFactorVal.setText(String.valueOf(lowFactor));
        sendValues();
    }//GEN-LAST:event_LowFactorSliderStateChanged

    private void sendValuesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendValuesButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sendValuesButtonMouseClicked

    private void timeLowTextTingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeLowTextTingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeLowTextTingActionPerformed

    private void TimeHighSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TimeHighSliderStateChanged
        // TODO add your handling code here:

        float timeHigh = TimeHighSlider.getValue();
        TimeHigh.setText(String.valueOf(timeHigh));
        sendValues();
    }//GEN-LAST:event_TimeHighSliderStateChanged

    private void TimeHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeHighActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeHighActionPerformed

    private void timeLowSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeLowSliderStateChanged
        // TODO add your handling code here:

        float timeLow = timeLowSlider.getValue();
        this.timeLowTextTing.setText(String.valueOf(timeLow));
        sendValues();
    }//GEN-LAST:event_timeLowSliderStateChanged

    int setValueIncrement = 5;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton FireToggle;
    private javax.swing.JSlider HighFactorSlider;
    private javax.swing.JTextField HighFactorVal;
    private javax.swing.JSlider LowFactorSlider;
    private javax.swing.JTextField LowFactorVal;
    private javax.swing.JSlider MiddleWindowSlider;
    private javax.swing.JTextField MiddleWiundowVal;
    private javax.swing.JSlider SaturationMaxSlider;
    private javax.swing.JSlider ShootingWindowSlider;
    private javax.swing.JTextField ShootingWindowVal;
    private javax.swing.JTextField TimeHigh;
    private javax.swing.JSlider TimeHighSlider;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JToggleButton VideoOnOffToggle;
    private javax.swing.JButton addValuesBtn;
    private javax.swing.JPanel cameraPanel;
    private javax.swing.JButton fireButton;
    private javax.swing.JButton fireButton1;
    private javax.swing.JButton fireButton2;
    private javax.swing.JSlider hueMaxSlider;
    private javax.swing.JTextField hueMaxValue;
    private javax.swing.JSlider hueMinSlider;
    private javax.swing.JTextField hueMinValue;
    private javax.swing.JButton importValueBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton manualModeToggle;
    private javax.swing.JTextField saturationMaxValue;
    private javax.swing.JSlider saturationMinSlider;
    private javax.swing.JTextField saturationMinValue;
    private javax.swing.JButton sendValuesButton;
    private javax.swing.JSlider servoXvalue;
    private javax.swing.JSlider servoYvalue;
    private javax.swing.JSlider timeLowSlider;
    private javax.swing.JTextField timeLowTextTing;
    private javax.swing.JSlider valueMaxSlider;
    private javax.swing.JTextField valueMaxValue;
    private javax.swing.JSlider valueMinSlider;
    private javax.swing.JTextField valueMinValue;
    // End of variables declaration//GEN-END:variables

    private byte[] getCurrentvalues() {

        byte[] returnByte = new byte[25];

        returnByte[1] = (byte) hueMinSlider.getValue();
        returnByte[2] = (byte) hueMaxSlider.getValue();
        returnByte[3] = (byte) saturationMinSlider.getValue();
        returnByte[4] = (byte) SaturationMaxSlider.getValue();
        returnByte[5] = (byte) valueMinSlider.getValue();
        returnByte[6] = (byte) valueMaxSlider.getValue();
        returnByte[7] = (byte) (videoStreamActive ? 1 : 0);
        returnByte[8] = (byte) (manualModeActive ? 1 : 0);
        returnByte[9] = (byte) upValueFromGui;
        returnByte[10] = (byte) downValueFromGui;
        returnByte[11] = (byte) leftValueFromGui;
        returnByte[12] = (byte) rightValueFromGui;
        returnByte[13] = (byte) (shootToKill ? 1 : 0);
        returnByte[14] = (byte) (fire ? 1 : 0);
        returnByte[15] = (byte) servoXvalue.getValue();
        returnByte[16] = (byte) servoYvalue.getValue();
        returnByte[17] = (byte) ShootingWindowSlider.getValue();
        returnByte[18] = (byte) MiddleWindowSlider.getValue();
        returnByte[19] = (byte) LowFactorSlider.getValue();
        returnByte[20] = (byte) HighFactorSlider.getValue();
        returnByte[21] = (byte) timeLowSlider.getValue();
        returnByte[22] = (byte) TimeHighSlider.getValue();

        //returnByte[6] = 6;
        //System.out.println(returnByte[6]);
        resetValues();
        return returnByte;
    }

    private void resetValues() {

        upValueFromGui = 0;
        downValueFromGui = 0;
        rightValueFromGui = 0;
        leftValueFromGui = 0;
        fire = false;
    }

    private void sendValues() {
        udpSend.sendParam(getCurrentvalues());
    }

}
