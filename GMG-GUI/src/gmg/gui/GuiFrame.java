/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gmg.gui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Olav Rune
 */
public class GuiFrame extends javax.swing.JFrame {

    int hueVal;
    int satVal;
    int valVal;
    boolean videoStreamActive;
    boolean manualModeActive;
    private UDPsend udpSend;
    private UdpRecive UdpRecive;
    
    int upValueFromGui;
    int downValueFromGui;
    int leftValueFromGui;
    int rightValueFromGui;

    /**
     * Creates new form GuiFrame
     */
    public GuiFrame() {
        initComponents();
    }

    public void addPanel(Panel p) {

        cameraPanel.add(p);
    }

    public void addUDPSendSocket(UDPsend udp) {

        this.udpSend = udp;
    }

    public void addUDPReciveSocket(UdpRecive udpRecive) {

        this.UdpRecive = udpRecive;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        valueMaxSlider = new javax.swing.JSlider();
        hueMinSlider = new javax.swing.JSlider();
        hueMaxSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        hueMaxValue = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        hueMinValue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        saturationMaxValue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        saturationMinSlider = new javax.swing.JSlider();
        saturationMinValue = new javax.swing.JTextField();
        SaturationMaxSlider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        valueMaxValue = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        valueMinSlider = new javax.swing.JSlider();
        valueMinValue = new javax.swing.JTextField();
        importHue = new javax.swing.JTextField();
        importSaturation = new javax.swing.JTextField();
        importValue = new javax.swing.JTextField();
        importValueBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        addValuesBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        LeftButton = new javax.swing.JButton();
        cameraPanel = new Panel();
        sendValuesButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        VideoOnOffToggle = new javax.swing.JToggleButton();
        RightButton = new javax.swing.JButton();
        manualModeToggle = new javax.swing.JToggleButton();
        UpButton = new javax.swing.JButton();
        DownButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        valueMaxSlider.setMaximum(255);
        valueMaxSlider.setValue(206);
        valueMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                valueMaxSliderStateChanged(evt);
            }
        });

        hueMinSlider.setMaximum(200);
        hueMinSlider.setToolTipText("");
        hueMinSlider.setValue(29);
        hueMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hueMinSliderStateChanged(evt);
            }
        });

        hueMaxSlider.setMaximum(255);
        hueMaxSlider.setValue(92);
        hueMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hueMaxSliderStateChanged(evt);
            }
        });

        jLabel3.setText("Hue min");

        hueMaxValue.setText("1000");
        hueMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hueMaxValueActionPerformed(evt);
            }
        });

        jLabel6.setText("Hue max");

        hueMinValue.setText("1000");
        hueMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hueMinValueActionPerformed(evt);
            }
        });

        jLabel7.setText("Saturation min");

        saturationMaxValue.setText("1000");
        saturationMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturationMaxValueActionPerformed(evt);
            }
        });

        jLabel8.setText("Saturation max");

        saturationMinSlider.setMaximum(255);
        saturationMinSlider.setToolTipText("");
        saturationMinSlider.setValue(25);
        saturationMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                saturationMinSliderStateChanged(evt);
            }
        });

        saturationMinValue.setText("1000");
        saturationMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturationMinValueActionPerformed(evt);
            }
        });

        SaturationMaxSlider.setMaximum(255);
        SaturationMaxSlider.setToolTipText("");
        SaturationMaxSlider.setValue(125);
        SaturationMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SaturationMaxSliderStateChanged(evt);
            }
        });

        jLabel9.setText("Value min");

        valueMaxValue.setText("1000");
        valueMaxValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueMaxValueActionPerformed(evt);
            }
        });

        jLabel10.setText("Value max");

        valueMinSlider.setMaximum(255);
        valueMinSlider.setToolTipText("");
        valueMinSlider.setValue(84);
        valueMinSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                valueMinSliderStateChanged(evt);
            }
        });

        valueMinValue.setText("1000");
        valueMinValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueMinValueActionPerformed(evt);
            }
        });

        importHue.setText("1000");
        importHue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importHueActionPerformed(evt);
            }
        });

        importSaturation.setText("1000");
        importSaturation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importSaturationActionPerformed(evt);
            }
        });

        importValue.setText("1000");
        importValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importValueActionPerformed(evt);
            }
        });

        importValueBtn.setText("Get Value");
        importValueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importValueBtnActionPerformed(evt);
            }
        });

        jButton1.setText("AutoTune");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addValuesBtn.setText("Add values");
        addValuesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addValuesBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Settings");

        LeftButton.setText("<<");
        LeftButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LeftButtonMouseClicked(evt);
            }
        });
        LeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftButtonActionPerformed(evt);
            }
        });
        LeftButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LeftButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout cameraPanelLayout = new javax.swing.GroupLayout(cameraPanel);
        cameraPanel.setLayout(cameraPanelLayout);
        cameraPanelLayout.setHorizontalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );
        cameraPanelLayout.setVerticalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        sendValuesButton.setText("Send values");
        sendValuesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendValuesButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("update from UDP");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        VideoOnOffToggle.setText("Video on");
        VideoOnOffToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VideoOnOffToggleStateChanged(evt);
            }
        });
        VideoOnOffToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VideoOnOffToggleMouseClicked(evt);
            }
        });
        VideoOnOffToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VideoOnOffToggleActionPerformed(evt);
            }
        });

        RightButton.setText(">>");
        RightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RightButtonMouseClicked(evt);
            }
        });

        manualModeToggle.setText("Manual Mode");
        manualModeToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                manualModeToggleStateChanged(evt);
            }
        });
        manualModeToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manualModeToggleMouseClicked(evt);
            }
        });
        manualModeToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualModeToggleActionPerformed(evt);
            }
        });

        UpButton.setText("^");
        UpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpButtonMouseClicked(evt);
            }
        });
        UpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpButtonActionPerformed(evt);
            }
        });
        UpButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UpButtonKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UpButtonKeyTyped(evt);
            }
        });

        DownButton.setText("v");
        DownButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DownButtonMouseClicked(evt);
            }
        });
        DownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cameraPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 214, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LeftButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DownButton)
                            .addComponent(UpButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RightButton)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SaturationMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(saturationMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(saturationMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(saturationMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(hueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(hueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(hueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(valueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(valueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(valueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(valueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(VideoOnOffToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(importValueBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(importHue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(importSaturation, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(importValue, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(manualModeToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addValuesBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sendValuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(UpdateButton)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpButton)
                .addGap(136, 136, 136))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(hueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saturationMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(saturationMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SaturationMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(saturationMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(valueMinSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valueMaxSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valueMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(valueMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(importHue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importSaturation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cameraPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(471, 471, 471)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(importValueBtn)
                            .addComponent(addValuesBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(sendValuesButton))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VideoOnOffToggle)
                            .addComponent(manualModeToggle)
                            .addComponent(RightButton)
                            .addComponent(LeftButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateButton)
                            .addComponent(DownButton))))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Engravers MT", 1, 36)); // NOI18N
        jLabel1.setText("GUided Grenade launcher control interface");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1359, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valueMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_valueMaxSliderStateChanged
        // TODO add your handling code here:
        valueMaxValue.setText(String.valueOf(valueMaxSlider.getValue()));
    }//GEN-LAST:event_valueMaxSliderStateChanged

    private void hueMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hueMinSliderStateChanged
        // TODO add your handling code here:
        hueMinValue.setText(String.valueOf(hueMinSlider.getValue()));
    }//GEN-LAST:event_hueMinSliderStateChanged

    private void hueMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hueMaxSliderStateChanged
        // TODO add your handling code here:
        hueMaxValue.setText(String.valueOf(hueMaxSlider.getValue()));
    }//GEN-LAST:event_hueMaxSliderStateChanged

    private void hueMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hueMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hueMaxValueActionPerformed

    private void hueMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hueMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hueMinValueActionPerformed

    private void saturationMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturationMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saturationMaxValueActionPerformed

    private void saturationMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_saturationMinSliderStateChanged
        // TODO add your handling code here:
        saturationMinValue.setText(String.valueOf(saturationMinSlider.getValue()));
    }//GEN-LAST:event_saturationMinSliderStateChanged

    private void saturationMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturationMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saturationMinValueActionPerformed

    private void SaturationMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SaturationMaxSliderStateChanged
        // TODO add your handling code here:
        saturationMaxValue.setText(String.valueOf(SaturationMaxSlider.getValue()));
    }//GEN-LAST:event_SaturationMaxSliderStateChanged

    private void valueMaxValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueMaxValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueMaxValueActionPerformed

    private void valueMinSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_valueMinSliderStateChanged
        // TODO add your handling code here:
        valueMinValue.setText(String.valueOf(valueMinSlider.getValue()));
    }//GEN-LAST:event_valueMinSliderStateChanged

    private void valueMinValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueMinValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueMinValueActionPerformed

    private void importHueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importHueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importHueActionPerformed

    private void importSaturationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importSaturationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importSaturationActionPerformed

    private void importValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importValueActionPerformed

    private void importValueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importValueBtnActionPerformed
        // TODO add your handling code here:

        String hue = String.valueOf(hueVal);
        String sat = String.valueOf(satVal);
        String val = String.valueOf(valVal);

        importHue.setText(hue);
        importSaturation.setText(sat);
        importValue.setText(val);

    }//GEN-LAST:event_importValueBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        hueMinSlider.setValue(hueVal - 6);
        hueMaxSlider.setValue(hueVal + 6);

        saturationMinSlider.setValue(satVal - 50);
        SaturationMaxSlider.setValue(satVal + 50);

        valueMinSlider.setValue(valVal - 30);
        valueMaxSlider.setValue(valVal + 30);

    }//GEN-LAST:event_jButton1ActionPerformed

    int setValueIncrement = 5;

    private void addValuesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addValuesBtnActionPerformed
        // TODO add your handling code here:

        // Setting a new maxvalue
        if (hueVal > hueMaxSlider.getValue()) {
            hueMaxSlider.setValue(hueVal + setValueIncrement);
        }
        if (satVal > SaturationMaxSlider.getValue()) {
            SaturationMaxSlider.setValue(satVal + setValueIncrement);
        }
        if (valVal > valueMaxSlider.getValue()) {
            valueMaxSlider.setValue((valVal + setValueIncrement));
        }

        //Setting a new min value
        if (hueVal < hueMinSlider.getValue()) {
            hueMinSlider.setValue(hueVal - setValueIncrement);
        }
        if (satVal < saturationMinSlider.getValue()) {
            saturationMinSlider.setValue(satVal - setValueIncrement);
        }
        if (valVal < valueMinSlider.getValue()) {
            valueMinSlider.setValue((valVal - setValueIncrement));
        }
        // messageField.setText("New values added");

    }//GEN-LAST:event_addValuesBtnActionPerformed

    private void sendValuesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendValuesButtonActionPerformed
        // TODO add your handling code here:

        udpSend.sendParam(getCurrentvalues());

        /*
        int i = 255;
        byte b = (byte) i;
        int s = b & (0xff);
    
        System.out.println("" + i + " " + b +" "  +s);
        
        byte signedByte = b;
int unsignedByte = signedByte & (0xff);

System.out.println("Signed: " + signedByte + " Unsigned: " + unsignedByte);
         */

    }//GEN-LAST:event_sendValuesButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        try {
            // TODO add your handling code here:

            byte[] b = UdpRecive.receiveParam();

        } catch (IOException ex) {
            Logger.getLogger(GuiFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void VideoOnOffToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VideoOnOffToggleActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_VideoOnOffToggleActionPerformed

    private void VideoOnOffToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VideoOnOffToggleStateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_VideoOnOffToggleStateChanged

    private void VideoOnOffToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VideoOnOffToggleMouseClicked
        // TODO add your handling code here:

        if (VideoOnOffToggle.isSelected()) {
            videoStreamActive = true;
        } else {
            videoStreamActive = false;
        }
        /*
        if(videoStreamActive == false){
            videoStreamActive = true;
        }
        else
            videoStreamActive = false;
         */
        //System.out.println(videoStreamActive);
    }//GEN-LAST:event_VideoOnOffToggleMouseClicked

    private void manualModeToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_manualModeToggleStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_manualModeToggleStateChanged

    private void manualModeToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manualModeToggleMouseClicked
        // TODO add your handling code here:

        if (manualModeToggle.isSelected()) {
            manualModeActive = true;
            resetValues();      // Resetting values in case some shitface have
                                // pressed manual buttons with automatic mode activated
        } else {
            manualModeActive = false;
        }
    }//GEN-LAST:event_manualModeToggleMouseClicked

    private void manualModeToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualModeToggleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manualModeToggleActionPerformed

    private void LeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LeftButtonActionPerformed

    private void UpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpButtonActionPerformed

    private void DownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DownButtonActionPerformed

    private void UpButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpButtonKeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_UpButtonKeyPressed

    private void UpButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpButtonKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_UpButtonKeyTyped

    private void UpButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpButtonMouseClicked
        // TODO add your handling code here:
        
        if(manualModeActive){
            upValueFromGui++;
        }
    }//GEN-LAST:event_UpButtonMouseClicked

    private void DownButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DownButtonMouseClicked
        // TODO add your handling code here:
        
         if(manualModeActive){
            downValueFromGui++;
        }
    }//GEN-LAST:event_DownButtonMouseClicked

    private void RightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RightButtonMouseClicked
        // TODO add your handling code here:
        
         if(manualModeActive){
            rightValueFromGui++;
        }
    }//GEN-LAST:event_RightButtonMouseClicked

    private void LeftButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LeftButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_LeftButtonKeyPressed

    private void LeftButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeftButtonMouseClicked
        // TODO add your handling code here:
         if(manualModeActive){
            leftValueFromGui++;
        }
        
    }//GEN-LAST:event_LeftButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DownButton;
    private javax.swing.JButton LeftButton;
    private javax.swing.JButton RightButton;
    private javax.swing.JSlider SaturationMaxSlider;
    private javax.swing.JButton UpButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JToggleButton VideoOnOffToggle;
    private javax.swing.JButton addValuesBtn;
    private javax.swing.JPanel cameraPanel;
    private javax.swing.JSlider hueMaxSlider;
    private javax.swing.JTextField hueMaxValue;
    private javax.swing.JSlider hueMinSlider;
    private javax.swing.JTextField hueMinValue;
    private javax.swing.JTextField importHue;
    private javax.swing.JTextField importSaturation;
    private javax.swing.JTextField importValue;
    private javax.swing.JButton importValueBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton manualModeToggle;
    private javax.swing.JTextField saturationMaxValue;
    private javax.swing.JSlider saturationMinSlider;
    private javax.swing.JTextField saturationMinValue;
    private javax.swing.JButton sendValuesButton;
    private javax.swing.JSlider valueMaxSlider;
    private javax.swing.JTextField valueMaxValue;
    private javax.swing.JSlider valueMinSlider;
    private javax.swing.JTextField valueMinValue;
    // End of variables declaration//GEN-END:variables

    private byte[] getCurrentvalues() {

        byte[] returnByte = new byte[20];

        returnByte[0] = (byte) hueMinSlider.getValue();

        returnByte[1] = (byte) hueMaxSlider.getValue();
        returnByte[2] = (byte) saturationMinSlider.getValue();
        returnByte[3] = (byte) SaturationMaxSlider.getValue();
        returnByte[4] = (byte) valueMinSlider.getValue();
        returnByte[5] = (byte) valueMaxSlider.getValue();
        returnByte[6] = (byte) (videoStreamActive ? 1 : 0);
        returnByte[7] = (byte) (manualModeActive ? 1 : 0);
        returnByte[8] = (byte) upValueFromGui;
        returnByte[9] = (byte) downValueFromGui;
        returnByte[10] = (byte) leftValueFromGui;
        returnByte[11] = (byte) rightValueFromGui;
        

        //returnByte[6] = 6;
        //System.out.println(returnByte[6]);
        
        resetValues();
        return returnByte;
    }

    private void resetValues() {
        
        upValueFromGui = 0;
        downValueFromGui = 0;
        rightValueFromGui = 0;
        leftValueFromGui = 0;
    }
}
